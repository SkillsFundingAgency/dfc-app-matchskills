@using DFC.App.MatchSkills.ViewComponents.SkillsList
@using DFC.App.MatchSkills.ViewModels
@model ConfirmRemoveCompositeViewModel

@{
    var slm = new SkillsListViewModel(Model.Id.Value, SkillsListViewModel.ListItemType.Bullet);
    slm.Skills.LoadFrom(Model.Skills);
    slm.BeginSkillsListHTML = "<ul class='govuk-list govuk-list--bullet'>";
    slm.EndSkillsListHTML = "</ul>";
}
<div class="govuk-grid-row">
    <govukBackLink LinkHref="#" LinkTitle="BackLink" Id="BackLink" class="hideBackButton"></govukBackLink>
</div>
<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <div class="govuk-grid-row">

            <div class="govuk-form-group">

                <fieldset class="govuk-fieldset">
                    <legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
                        <govukHeadingH1 Text="Do you want to remove the displayed skills from your skills list?" />
                    </legend>
                    <div class="govuk-checkboxes govuk-checkboxes--small skill-list-container checkbox-container">
                        @await Component.InvokeAsync("SkillsList", slm)
                    </div>
                </fieldset>

                <form method="post" action="@Model.CompositeSettings.Path/@CompositeViewModel.PageId.Removed.Value">
                    @foreach (var skill in Model.Skills)
                    {
                        <input id="@skill.Id" name="@skill.Id--@skill.Name" value="@skill.Name" type="hidden" />
                    }

                    <govukButton id="@Model.GetElementId("govukButton", "RemoveSelectedSkills")" text="Remove selected skills" />
                    <govukButtonLink additional-class="govuk-button--secondary" id="@Model.GetElementId("govukButtonLink", "Cancel")" LinkTitle="Cancel Remove Skills" LinkText="Cancel" LinkHref="@CompositeViewModel.PageId.SkillsBasket"></govukButtonLink>

                </form>
            </div>
        </div>
    </div>
</div>

