@using DFC.App.MatchSkills.ViewComponents.SkillsList
@model DFC.App.MatchSkills.ViewModels.RelatedSkillsCompositeViewModel


<div class="govuk-main-wrapper govuk-main-wrapper--auto-spacing">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <form action="/matchskills/selectskills/addskills" method="post">
                <div class="govuk-form-group">
                    <fieldset class="govuk-fieldset">
                        <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                            <govukHeadingH1 Text="@Model.PageHeading" />
                        </legend>
                        <govukHeadingH3 text="@Model.RelatedSkills.Count Result@(Model.RelatedSkills.Count > 1 || Model.RelatedSkills.Count == 0 ? "s" : "") for @Model.SearchTerm"></govukHeadingH3>
                        <div class="govuk-checkboxes govuk-checkboxes--small skill-list-container checkbox-container">
                            @if (Model.RelatedSkills.Count == 0)
                            {
                                <govukLabel id="@Model.GetElementId("GovukCheckbox","NoRelatedSkillsFound")" Text="No related skills found"></govukLabel>
                            }
                            else
                            {
                                var slm = new SkillsListViewModel(Model.Id.Value, SkillsListViewModel.ListItemType.Checkbox);
                                slm.Skills.LoadFrom(Model.RelatedSkills);
                                @await Component.InvokeAsync("SkillsList", slm);
                            }

                        </div>
                    </fieldset>
                </div>
                @if (Model.RelatedSkills.Count >= 1)
                {
                    <govukButton id="@Model.GetElementId("govukButton","Add")" text="Add to skills list" />
                }
                <govukButtonLink id="@Model.GetElementId("govukButtonLink","Cancel")" LinkText="Cancel" AdditionalClass="govuk-button--secondary" LinkHref="/Matchskills/Basket/"/>
            </form>
        </div>
        <div class="govuk-grid-column-one-third">
            <govukHeadingH3 text="Skills you've recently added"></govukHeadingH3>
            @{
                var slmAdded = new SkillsListViewModel(Model.Id.Value, SkillsListViewModel.ListItemType.Bullet);
                slmAdded.Skills.LoadFrom(Model.Skills);
                slmAdded.BeginSkillsListHTML = "<ul class='govuk-list govuk-list--bullet'>";
                slmAdded.EndSkillsListHTML = "</ul>";
            }
            @await Component.InvokeAsync("SkillsList", slmAdded)
        </div>
    </div>
</div>

