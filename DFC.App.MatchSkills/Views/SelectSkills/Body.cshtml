@using DFC.App.MatchSkills.ViewComponents.SkillsList
@using DFC.App.MatchSkills.ViewModels
@model DFC.App.MatchSkills.ViewModels.SelectSkillsCompositeViewModel
@{
    var slm = new SkillsListViewModel(Model.Id.Value, SkillsListViewModel.ListItemType.Checkbox)
    {
        BeginSkillsListHTML = "<div class=\"govuk-checkboxes skill-list-container govuk-checkboxes--small dual-checkbox-container\">",
        EndSkillsListHTML = "</div>",
        AllSkillsSelected = Model.AllSkillsSelected
    };
    slm.Skills.LoadFrom(Model.Skills);
}

<govukErrorSummary hidden="@(!Model.HasError)">
    <govukErrorSummaryItem href="#selectskills" text="Choose skills to add to your skills list"></govukErrorSummaryItem>
</govukErrorSummary>

<div class="govuk-main-wrapper govuk-main-wrapper--auto-spacing">

    <div class="govuk-grid-row">

        <div class="govuk-grid-column-two-thirds">
            <form action="@CompositeViewModel.PageId.SelectSkills" method="post">

                <div class="results  @(Model.HasError ? "govuk-form-group--error": "") ">
                    <div class="govuk-form-group">
                        <fieldset class="govuk-fieldset" id="selectskills">
                            <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                                <govukHeadingH1 Text="@Model.PageHeading" />
                            </legend>

                            <p>
                                These are some of the skills you may have used in the role of <strong>@Model.Occupation</strong>.
                            </p>
                            <p>
                                From the list below, select the skills that you would like to match to careers.
                            </p>
                            <p>
                                If you have a skill that you do not want to use for career matching, do not add it to your skills list.
                            </p>

                            <div class="govuk-inset-text">
                                <p>
                                    If you want to add a skill that does not appear on the list below, try
                                    <govukLink id="@Model.GetElementId("govukLink","EnterSkills")" link-href="@CompositeViewModel.PageId.EnterSkills" link-text="searching"></govukLink>
                                    for it.
                                </p>
                            </div>

                            @if (Model.HasError)
                            {
                                <span id="changed-name-error" class="govuk-error-message">
                                    <span class="govuk-visually-hidden">Error:</span> Choose skills to add to your skills list
                                </span>
                            }
                            <govukLink id="@Model.GetElementId("govukLink","SkillSelectToggle")" link-href="/matchskills/@CompositeViewModel.PageId.SelectSkills/SkillSelectToggle?toggle=@Model.AllSkillsSelected" link-text="@(Model.AllSkillsSelected?"Clear all":"Select all")"></govukLink>


                            @await Component.InvokeAsync("SkillsList", slm)

                        </fieldset>
                    </div>
                </div>
                <govukButton id="@Model.GetElementId("govukButton","Addtoskillslist")" text="Add to skills list" />
            </form>
        </div>
    </div>
</div>
<script defer async src="@Model.CDN/nationalcareers_toolkit/js/matchskills.min.js"></script>