@using DFC.App.MatchSkills.ViewComponents.OccupationSearchScript
@using DFC.App.MatchSkills.ViewModels
@model DFC.App.MatchSkills.ViewModels.MoreJobsViewModel

@{

    var searchService = Model.SearchService;
    var autoCompleteElementName = Model.GetElementId("govukAutoComplete", Model.AutoCompleteElementName);
    var formElementName = Model.GetElementId("form", Model.FormElementName);
    var autoCompleteError = Model.GetElementId("govukAutoCompleteError", "SearchError");
    var searchButton = Model.GetElementId("govukSecondaryButton", "Search");
    var formGroup = Model.GetElementId("formGroup", "AutoComplete");

}
    <govukBackLink LinkHref="#" LinkTitle="BackLink" Id="BackLink" class="hideBackButton"></govukBackLink>
<govukErrorSummary hidden="@(!Model.HasError)">
    <govukErrorSummaryItem href="#@autoCompleteElementName" text="Enter a job title"></govukErrorSummaryItem>
</govukErrorSummary>


<div class="govuk-main-wrapper govuk-main-wrapper--auto-spacing">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <form id="@formElementName" action="@CompositeViewModel.PageId.OccupationSearchDetails" method="post">
                <div id="@formGroup" class="govuk-form-group   @(Model.HasError ? "govuk-form-group--error" : "")">
                    <govukHeadingH1 Text="Enter your current or previous job title" />

                    <p>This can be your current job or one that you’ve done before. You can match the skills you used in this job to other careers.</p>

                    <p>You can add skills from more than one job to your skills list.</p>

                    <govukLabel for="@Model.GetElementId("govUkInput", "Search")" text="Enter your job title" additional-class="govuk-!-font-weight-bold"></govukLabel>

                    <govukTextInput id="@Model.GetElementId("govUkInput", "Search")">
                    </govukTextInput>

                </div>
                <br />
                <br />
                <govukSecondaryButton id="@searchButton" text="Search"></govukSecondaryButton>
            </form>
            <p>To search for a specific skill, please click the link bellow</p>
            <p><a class="govuk-link" href="@Model.CompositeSettings.Path/@CompositeViewModel.PageId.EnterSkills">Search via skills</a></p>
        </div>
        <div class="govuk-grid-column-one-third">
            <govukHeadingH3 text="Occupations you've recently added"></govukHeadingH3>
            <govukBulletedList>
                @foreach (var occupation in Model.Occupations)
                {
                    <govukListItem text="@occupation.Name"></govukListItem>
                }
            </govukBulletedList>
        </div>
    </div>
</div>
@{
    var scriptModel = new OccupationSearchScriptModel()
    {
        SearchService = Model.SearchService,
        AutoCompleteElementName = autoCompleteElementName,
        FormElementName = formGroup,
        AutoCompleteError = autoCompleteError,
        SearchButton = searchButton
    };
}
<partial name="~/ViewComponents/OccupationSearchScript/Default.cshtml" model="@scriptModel" />

<script defer async src="@Model.CompositeSettings.CDN/nationalcareers_toolkit/js/matchskills.min.js"></script>