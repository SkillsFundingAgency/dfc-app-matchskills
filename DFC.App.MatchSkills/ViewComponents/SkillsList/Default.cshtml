@using DFC.App.MatchSkills.ViewComponents.SkillsList
@model SkillsListViewModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, DFC.Personalisation.CommonUI


@if (null == Model)
{
    // @ToDo: Log this as an error?
}
else if (null == Model.Skills || 0 == Model.Skills.Count)
{
    if (!string.IsNullOrWhiteSpace(Model.NoSkillsHTML))
    {
        @Html.Raw(Model.NoSkillsHTML)
    }
}
else
{
    @if (!string.IsNullOrWhiteSpace(Model.BeginSkillsListHTML))
    {
        @Html.Raw(Model.BeginSkillsListHTML)
    }

    @foreach (var item in Model.Skills)
    {
        switch (Model.ListType)
        {
            case SkillsListViewModel.ListItemType.Checkbox:
                var itemId = $"{Model.ItemIdPrefix}-GovukCheckbox-{item.Id}";
                <govukCheckbox id="@itemId" label="@item.Name" name="@item.Id--@item.Name" AdditionalClass="checkbox-container-item"></govukCheckbox>
                break;

            default:
                <li>@item.Name</li>
                break;
        }
    }

    @if (!string.IsNullOrWhiteSpace(Model.EndSkillsListHTML))
    {
        @Html.Raw(Model.EndSkillsListHTML)
    }
}
